/**
* This file was automatically generated by @cosmwasm/ts-codegen@0.35.3.
* DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
* and run the @cosmwasm/ts-codegen generate command to regenerate this file.
*/

export type Uint128 = string;
export interface InstantiateMsg {
  accepted_denoms: AcceptedDenom[];
  admin?: string | null;
  campaign_contract_code_id: number;
  creation_fee_address: string;
}
export interface AcceptedDenom {
  denom: string;
  min_accepted_fee: Uint128;
  pair_contract: string;
}
export type ExecuteMsg = {
  create_campaign: CampaignCreationSettings;
} | {
  set_campaign_contract_code_id: number;
} | {
  add_accepted_denom: AcceptedDenom;
} | {
  remove_accepted_denom: string;
} | {
  set_creation_fee_address: string;
};
export type Timestamp = Uint64;
export type Uint64 = number;
export type RewardDistributionType = {
  Daily: {
    num_of_days: number;
    [k: string]: unknown;
  };
} | {
  Immediate: {
    [k: string]: unknown;
  };
};
export interface CampaignCreationSettings {
  connection_id: string;
  expiration: Timestamp;
  remote_staking_denom: string;
  reward_distribution_type: RewardDistributionType;
  target_position: number;
  validator_address: string;
}
export type QueryMsg = ("get_campaign_contract_code_id" | "get_accepted_denoms" | "get_creation_fee_address") | {
  get_campaign: {
    connection_id: string;
    validator_addr: string;
  };
} | {
  get_all_campaigns: {};
} | {
  get_campaigns_by_connection: {
    connection_id: string;
  };
};
export type Addr = string;
export type ArrayOfValidatedAcceptedDenom = ValidatedAcceptedDenom[];
export interface ValidatedAcceptedDenom {
  denom: string;
  min_accepted_fee: Uint128;
  pair_contract: Addr;
}
export type ArrayOfCampaign = Campaign[];
export interface Campaign {
  campaign_addr: Addr;
  connection_id: string;
  target_position: number;
}